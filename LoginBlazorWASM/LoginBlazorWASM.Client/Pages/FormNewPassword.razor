@page "/form-new-password"
@using LoginBlazorWASM.Client.Layout
@using LoginBlazorWASM.Shared.src

@inject HttpClient Http
@inject NavigationManager NavigationManager

@layout GuessLayout

<main>
    <h3 class="text-center">Cambiar Contraseña</h3>
    <EditForm Model="usuario" OnValidSubmit="CambiarContrasenia">
        <DataAnnotationsValidator />
        <div class="mb-3">
            <label for="userNameInput" class="form-label">UserName</label>
            <InputText class="form-control" id="emailCCFInput" @bind-value="usuario.user_name" Placeholder="Nombre de usuario"/>
            <ValidationMessage For="(() => usuario.user_name)" />
        </div>
        <div class="mb-3">
            <label for="passwordInput" class="form-label">Antigua contraseña</label>
            <InputText type="password" class="form-control" id="passwordCCFInput" @bind-value="usuario.password" Placeholder="Contraseña vieja"/>
            <ValidationMessage For="(() => usuario.password)" />
        </div>
        <div class="mb-3">
            <label for="newPasswordInput" class="form-label">Nueva contraseña</label>
            <InputText type="password" class="form-control" id="newPasswordInput" @bind-value="usuario.new_password" placeholder="Nueva Contraseña"/>
        </div>
        <div class="button-container">
            <button type="submit" class="btn btn-success btn-center">Cambiar</button>
            <button type="button" class="btn btn-success btn-center" @onclick="Regresar">Volver al Login</button>
        </div>
    </EditForm>

    @if (!string.IsNullOrEmpty(mensaje))
    {
        <div class="alert @alertClass">
            @mensaje
        </div>
    }
</main>
@code {
    UsuarioDTO usuario = new UsuarioDTO();
    string mensaje = "";
    string alertClass = "";

    void Regresar()
    {
        NavigationManager.NavigateTo("");
    }

    async Task CambiarContrasenia()
    {
        var result = await Http.PutAsJsonAsync("api/usuarios/cambiar", usuario);
        if (result.IsSuccessStatusCode)
        {
            mensaje = "Se cambió correctamente la contraseña.";
            alertClass = "alert-success";
            // Vuelve a la página del    login después de 5 segundos
            await Task.Delay(5000);
            NavigationManager.NavigateTo("");
        }
        else
        {
            mensaje = $"Error al cambiar la contraseña: {result.ReasonPhrase}";
            alertClass = "alert-danger";

            // Refrescar la página después de 5 segundos
            await Task.Delay(5000); 
            NavigationManager.NavigateTo("form-new-password", forceLoad: true);
        }
    }
}
