@page "/form-register"
@using AuthRoleApp.Shared
@using LoginBlazorWASM.Client.Layout
@layout GuessLayout
@inject HttpClient Http
@inject NavigationManager NavigationManager
@rendermode InteractiveWebAssembly

<h3 class="text-center">Formulario de Registro</h3>

<EditForm Model="usuario" OnValidSubmit="Registrarse">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="userNameInput" class="form-label">UserName</label>
        <InputText type="text" class="form-control" id="emailInput" @bind-value="usuario.user_name" />
        <ValidationMessage For="(() => usuario.user_name)" />
    </div>
    <div class="mb-3">
        <label for="passwordInput" class="form-label">Contraseña</label>
        <InputText type="password" class="form-control" id="passwordInput" @bind-value="usuario.password" />
        <ValidationMessage For="(() => usuario.password)" />
    </div>
    <div class="button-container">
        <button type="submit" class="btn btn-success btn-center">Ingresar</button>
        <button type="button" class="btn btn-success btn-center" @onclick="Volver">Volver al Login</button>
    </div>
</EditForm>

@code {
    UsuarioDTO usuario = new UsuarioDTO();

    void Volver(){
        NavigationManager.NavigateTo("");
    }

    async Task Registrarse()
    {
        var result = await Http.PostAsJsonAsync("api/usuarios/registrar", usuario);
        if (result.IsSuccessStatusCode)
        {
            await Task.Delay(5000);
            NavigationManager.NavigateTo("");
        }
        else
        {
            var errorMessage = await result.Content.ReadAsStringAsync();
            Console.WriteLine($"Error al registrarse: {errorMessage}");
        }
    }
}
